#include "/home/kiwi/Tools/ibex-lib-ibex-2.1.18/OUT/include/ibex/ibex.h"
#include <stdio.h>
#include <stdlib.h>
#include "src/vibes.h"


int main() {
    Function Twz1("p","u","1/((-0.083762320000000000006+0.0046*exp(ln(10)*2*u)*p-0.49611937274312*exp(ln(10)*4*u)+22.558249023099959999*exp(ln(10)*2*u)-0.140034*exp(ln(10)*4*u)*p)^2+((18.31283251271888)*exp(ln(10)*u)-1.0006441564*exp(ln(10)*3*u)*p+0.0694288572*exp(ln(10)*5*u)-6.4026959626000000004*exp(ln(10)*3*u))^2)*((-0.56441564000000000003*exp(ln(10)*3*u)*p+0.0347144286*exp(ln(10)*5*u)-0.228068*exp(ln(10)*3*u))^2+((0.46)*exp(ln(10)*2*u)*p-0.279837274312*exp(ln(10)*4*u)-0.070017*exp(ln(10)*4*u)*p)^2)");
    Function Twz2("p","u","1/(((22.5288071128)*exp(ln(10)*u)-0.140034*exp(ln(10)*3*u)*p-0.4958*exp(ln(10)*3*u))^2+(-18.2092+exp(ln(10)*2*u)*p-0.0694288572*exp(ln(10)*4*u)+6.4004152826*exp(ln(10)*2*u))^2)*(((0.22528807112799999998)*exp(ln(10)*2*u)*p-0.0317332589711308*exp(ln(10)*4*u)+0.090281213600000000004*exp(ln(10)*2*u))^2+(-0.064004152826*exp(ln(10)*3*u)*p-0.11169782566526239999*exp(ln(10)*3*u)+0.18209200000000000001*exp(ln(10)*u)*p)^2)");
    Function Twz3("p","u","(((22.5288071128)*exp(ln(10)*u)-0.140034*exp(ln(10)*3*u)*p-0.4958*exp(ln(10)*3*u))^2+(-18.2092+exp(ln(10)*2*u)*p-0.0694288572*exp(ln(10)*4*u)+6.4004152826*exp(ln(10)*2*u))^2)^(-1)*((6.201986574221390519)*exp(ln(10)*4*u)+316.27424886526334305*exp(ln(10)*2*u))");
    Function RS1("p","0.4958+0.140034*p");
    Function RS2("p","1/(0.4958+0.140034*p)*(1.6091765651921445079+1.3920757536836084001*p+0.140034*p^2)");
    Function RS3("p","(31.77668587736385809+28.833318248091217724*p+2.7977252826*p^2)*1/(1.6091765651921445079+1.3920757536836084001*p+0.140034*p^2)");
    Function RS4("p","1/(0.4958+0.140034*p)*(9.02812136+2.5499071128*p)");
    
    Interval p(1.3735,2.2262);
    Interval u(-3,3);
    IntervalVector ev(2,p);
    ev[1] = u;

    cout<<"Twz1: "<<Twz1.eval_vector(ev);<<endl;
    cout<<"Twz2: "<<Twz2.eval_vector(ev);<<endl;
    cout<<"Twz2: "<<Twz3.eval_vector(ev);<<endl;

    cout<<"RS1: "<<RS1.eval_vector(IntervalVector(1,p));<<endl;
    cout<<"RS2: "<<RS2.eval_vector(IntervalVector(1,p));<<endl;
    cout<<"RS3: "<<RS3.eval_vector(IntervalVector(1,p));<<endl;
    cout<<"RS4: "<<RS4.eval_vector(IntervalVector(1,p));<<endl;

}

